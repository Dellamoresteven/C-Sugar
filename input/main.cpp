/* This file is auto generated by C-Sugar @author Steven Dellamore 
URL = https://github.com/Dellamoresteven/C-Sugar */

// author: Steven Dellamore
// date: 2020-2-19
// version: 1.0.0

#include <iostream>
#include <stdlib.h>
#include <fstream>
#include <algorithm>
#include <vector>
#include <string>
#include <cctype>
#include <list>
#include <sys/stat.h>
#include <unistd.h>
#include <functional>
#include <map>
#include <sstream>
#include <iterator>

template < typename T, typename U, typename G, typename H >
auto add( T a, U b, G c, H d ) {
    std::cout << std::endl;
    // Printing out the entire d vector with delim: ","
    for (auto i = d.begin(); i != d.end(); ++i)
    {
        std::cout << *i << ",";
    }
    std::cout << "" << std::endl;
    return (a + b + c);
}

int main(){ 
    // x @TODO
    auto x = std::vector< int >();
    x.push_back(1); // pushing 1 onto x
    x.push_back(2); // pushing 2 onto x
    x.push_back(3); // pushing 3 onto x
    x.push_back(4); // pushing 4 onto x
    x.push_back(5); // pushing 5 onto x

    // Printing out the entire x vector with delim: ","
    for (auto i = x.begin(); i != x.end(); ++i)
    {
        std::cout << *i << ",";
    }
    // y @TODO
    auto y = add( 1, 2, 3, x );
    std::cout <<  "\n" << y << "\n";
}